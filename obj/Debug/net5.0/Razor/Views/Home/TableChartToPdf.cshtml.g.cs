#pragma checksum "C:\Projects\Cold\May\05162022\TextAreaMessageToPdf\TextAreaMessageToPdf\Views\Home\TableChartToPdf.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b88b8380e3d703b20d2926f8b1fbab95393ec9da"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_TableChartToPdf), @"mvc.1.0.view", @"/Views/Home/TableChartToPdf.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Projects\Cold\May\05162022\TextAreaMessageToPdf\TextAreaMessageToPdf\Views\_ViewImports.cshtml"
using TextAreaMessageToPdf;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Projects\Cold\May\05162022\TextAreaMessageToPdf\TextAreaMessageToPdf\Views\_ViewImports.cshtml"
using TextAreaMessageToPdf.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b88b8380e3d703b20d2926f8b1fbab95393ec9da", @"/Views/Home/TableChartToPdf.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a7813c775e848b2a0628eaa5700c5a962eeba155", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Home_TableChartToPdf : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<html>
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>

<!-- Required to convert named colors to RGB -->
<script src=""https://cdnjs.cloudflare.com/ajax/libs/canvg/1.4/rgbcolor.min.js""></script>

<!-- Optional if you want blur -->
<script src=""https://cdn.jsdelivr.net/npm/stackblur-canvas/1/dist/stackblur.min.js""></script>

<script src=""https://cdn.jsdelivr.net/npm/canvg/dist/browser/canvg.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/highcharts/5.0.7/highcharts.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.2.61/jspdf.debug.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js""></script>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b88b8380e3d703b20d2926f8b1fbab95393ec9da4139", async() => {
                WriteLiteral(@"
    <style>
        #customers {
            font-family: ""Trebuchet MS"", Arial, Helvetica, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

            #customers td, #customers th {
                border: 1px solid #ddd;
                padding: 8px;
            }

            #customers tr:nth-child(even) {
                background-color: #f2f2f2;
            }

            #customers tr:hover {
                background-color: #ddd;
            }

            #customers th {
                padding-top: 12px;
                padding-bottom: 12px;
                text-align: left;
                background-color: #4CAF50;
                color: white;
            }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b88b8380e3d703b20d2926f8b1fbab95393ec9da5871", async() => {
                WriteLiteral(@"
    <input type=""button"" id=""btnDownload"" value=""download"" /> Please click on this button to get chart with html content on pdf
    <div class=""white-back row"" style=""padding: 1.5rem;"" id=""tvgMainCnt"">
        <div id=""top-content"">
            <div>
                <div>
                    <img src=""https://miro.medium.com/max/1198/1*n-Q2XBz6CFC1MgMpdab4xQ.jpeg"" style=""height: 100px;"" />
                </div>
            </div>
            <div style=""margin-top: 1rem;"">
                <p style=""color:green"">
                    Dear members,
                </p>
            </div>
            <div>
                Added some fake text: Please ignore this is test text, Please ignore this is test text, Please ignore this is test text.
            </div>
            <br />
            <table id=""customers"" class=""table table-striped"" width=""100%"">

                <thead width=""100%"" width=""100%"">
                    <tr class='warning'>
                        <th>No.</th>
         ");
                WriteLiteral(@"               <th>Country</th>
                        <th>Population</th>
                        <th>Date</th>
                        <th>Age</th>
                    </tr>
                </thead>
                <tbody width=""100%"">
                    <tr>
                        <td>1</td>
                        <td>Chinna</td>
                        <td>1,363,480,000 000 000</td>
                        <td>March 24, 2014</td>
                        <td>19.1</td>
                    </tr>
                    <tr>
                        <td>2</td>
                        <td>India</td>
                        <td>1,241,900,000</td>
                        <td>March 24, 2014</td>
                        <td>17.4</td>
                    </tr>
                    <tr>
                        <td>3</td>
                        <td>United States</td>
                        <td>317,746,000</td>
                        <td>March 24, 2014</td>
                        <td>4.44</");
                WriteLiteral(@"td>
                    </tr>
                    <tr>
                        <td>4</td>
                        <td>Indonesia</td>
                        <td>249,866,000</td>
                        <td>July 1, 2013</td>
                        <td>3.49</td>
                    </tr>
                    <tr>
                        <td>5</td>
                        <td>Brazil</td>
                        <td>201,032,714</td>
                        <td>July 1, 2013</td>
                        <td>2.81</td>
                    </tr>
                </tbody>
            </table>
            <div style=""margin-top: 1rem;"">
                <p>
                    Download of chart with html content should work on all browser but not working in Microsoft edge.
                </p>
            </div>
        </div>

        <div id=""testchart""></div>
    </div>
    <div id=""bottom-content"">
        <p>
            Thanks for looking into this issue, struggling to fix this for last ");
                WriteLiteral("2 days.\r\n            UPDATE: Finally able to fix it. Cheers!!\r\n        </p>\r\n        <p>this demo develop by Bhavdip Talaviya</p>\r\n    </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
</html>

<script type=""text/javascript"">
$(document).ready(function() {
    Highcharts.chart('testchart', {

        title: {
            text: 'Solar Employment Growth by Sector, 2010-2016'
        },

        subtitle: {
            text: 'Source: thesolarfoundation.com'
        },

        yAxis: {
            title: {
                text: 'Number of Employees'
            }
        },
        legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'middle'
        },

        plotOptions: {
            series: {
                label: {
                    connectorAllowed: false
                },
                pointStart: 2010
            }
        },

        series: [{
            name: 'Installation',
            data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]
        }, {
            name: 'Manufacturing',
            data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434]
        }, {
   ");
            WriteLiteral(@"         name: 'Sales & Distribution',
            data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387]
        }, {
            name: 'Project Development',
            data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227]
        }, {
            name: 'Other',
            data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111]
        }],

        responsive: {
            rules: [{
                condition: {
                    maxWidth: 500
                },
                chartOptions: {
                    legend: {
                        layout: 'horizontal',
                        align: 'center',
                        verticalAlign: 'bottom'
                    }
                }
            }]
        }

    });
});
$(""#btnDownload"").click(function(){
  var doc = new jsPDF('portrait', 'pt', 'a4', true);
    var elementHandler = {
        '#ignorePDF': function(element, renderer) {
            return true;
        }
    };

    var sour");
            WriteLiteral(@"ce = document.getElementById(""top-content"");
    doc.fromHTML(source, 15, 15, {
        'width': 560,
        'elementHandlers': elementHandler
    });

    var svg = document.querySelector('svg');
    var canvas = document.createElement('canvas');
    var canvasIE = document.createElement('canvas');
    var context = canvas.getContext('2d');




    var data = (new XMLSerializer()).serializeToString(svg);
    canvg(canvas, data);
    var svgBlob = new Blob([data], {
        type: 'image/svg+xml;charset=utf-8'
    });

    var url = canvas.toDataURL(svgBlob);//DOMURL.createObjectURL(svgBlob);

    var img = new Image();
    img.onload = function() {
        context.canvas.width = $('#testchart').find('svg').width();;
        context.canvas.height = $('#testchart').find('svg').height();;
        context.drawImage(img, 0, 0);
        // freeing up the memory as image is drawn to canvas
        //DOMURL.revokeObjectURL(url);

        var dataUrl;
        if (isIEBrowser()) { // Che");
            WriteLiteral(@"ck of IE browser
            var svg = $('#testchart').highcharts().container.innerHTML;
            canvg(canvasIE, svg);
            dataUrl = canvasIE.toDataURL('image/JPEG');
        } else {
            dataUrl = canvas.toDataURL('image/jpeg');
        }
        doc.addImage(dataUrl, 'JPEG', 20, 365, 560, 350); // 365 is top

        var bottomContent = document.getElementById(""bottom-content"");
        doc.fromHTML(bottomContent, 15, 750, {   //700 is bottom content top  if you increate this then you should increase above 365
            'width': 560,
            'elementHandlers': elementHandler
        });

        setTimeout(function() {
            doc.save('HTML-To-PDF-Dvlpby-Bhavdip.pdf');
        }, 2000);
    };
    img.src = url;
});
function isIEBrowser() {
    var ieBrowser;
    var ua = window.navigator.userAgent;
    var msie = ua.indexOf(""MSIE "");

    if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) // Internet Explorer
    {
        ieBrowser ");
            WriteLiteral("= true;\r\n    } else //Other browser\r\n    {\r\n        console.log(\'Other Browser\');\r\n        ieBrowser = false;\r\n    }\r\n\r\n    return ieBrowser;\r\n};\r\n</script>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
