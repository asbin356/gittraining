#pragma checksum "C:\Projects\Cold\May\05162022\TextAreaMessageToPdf\TextAreaMessageToPdf\Views\Home\Exportpdf1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a8c07cbaf2f7697b180c1c57ecb6608b0fcd80a0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Exportpdf1), @"mvc.1.0.view", @"/Views/Home/Exportpdf1.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Projects\Cold\May\05162022\TextAreaMessageToPdf\TextAreaMessageToPdf\Views\_ViewImports.cshtml"
using TextAreaMessageToPdf;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Projects\Cold\May\05162022\TextAreaMessageToPdf\TextAreaMessageToPdf\Views\_ViewImports.cshtml"
using TextAreaMessageToPdf.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a8c07cbaf2f7697b180c1c57ecb6608b0fcd80a0", @"/Views/Home/Exportpdf1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a7813c775e848b2a0628eaa5700c5a962eeba155", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Home_Exportpdf1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"

    <script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"" integrity=""sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg=="" crossorigin=""anonymous""></script>
    <style>
        * {
            font-family: 'Calibri Light';
            color: #17293c;
            box-sizing: border-box;
        }

        h1, h2 {
            margin: 0 auto;
            padding: 0;
            text-align: center;
            color: #17293c;
            font-size: 18px;
        }

        input[type=button] {
            font-size: 15px;
            display: block;
            display: inline-block;
            vertical-align: middle;
            text-align: center;
            cursor: pointer;
        }

        ::placeholder {
            color: #999;
            text-transform: lowercase;
        }

        ul {
            display: inline-block;
            list-style: none;
            margin: 0;");
            WriteLiteral(@"
            padding: 0;
            width: 97%;
        }

            ul > li {
                margin-left: 2%;
            }

                ul > li > input[type=text] {
                    width: 99%;
                }

        #container ul > li {
            width: 94%;
            color: #000;
            font-size: 18px;
        }

        #container_data_entry {
            border: solid 1px #ccc;
            border-radius: 4px;
            margin: 5px 5px 5px 0;
            padding: 10px 5px;
            background-color: #f5f5f5;
            overflow: auto;
            height: 100%;
        }

        #student_details {
            padding: 10px 0;
            background-color: #f5f5f5;
            color: #3d3d3d;
            border: solid 1px #ccc;
            border-radius: 4px;
            margin: 5px 0 5px 5px;
            width: 25%;
            float: right;
        }

        input[type=text], textarea {
            font-size: 16px;
            fon");
            WriteLiteral(@"t-weight: 500;
            text-align: left;
            width: auto;
            padding: 9px;
            border: none;
            border-bottom: 1px solid #ccc;
            margin: 5px 0;
        }

        textarea {
            height: 3em;
            width: 100%;
        }

        /* 		Popup window. */
        #picturebox {
            display: none;
            position: fixed;
            border: 0;
            top: 0;
            right: 0;
            left: 0;
            overflow-x: auto;
            overflow-y: hidden;
            z-index: 9999;
            background-color: rgba(239,239,239,.9);
            width: 100%;
            height: 100%;
            padding-top: 10px;
            text-align: center;
            cursor: pointer;
            -webkit-box-align: center;
            -webkit-box-orient: vertical;
            -webkit-box-pack: center;
            -webkit-transition: .2s opacity;
            -webkit-perspective: 1000;
        }

        .re");
            WriteLiteral(@"vdivshowimg {
            display: block;
            width: 300px;
            top: 20%;
            text-align: center;
            margin: 0 auto;
            padding: 0;
            position: relative;
            background-color: #fff;
            webkit-box-shadow: 6px 0 10px rgba(0,0,0,.2),-6px 0 10px rgba(0,0,0,.2);
            -moz-box-shadow: 6px 0 10px rgba(0,0,0,.2),-6px 0 10px rgba(0,0,0,.2);
            box-shadow: 6px 0 10px rgba(0,0,0,.2),-6px 0 10px rgba(0,0,0,.2);
            overflow: hidden;
        }
    </style>

    <div style=""padding: 10px 0;"">
        <h1>Online Test (Sample)</h1>
    </div>

    <!--Data entry section.-->
    <div id=""container_data_entry"">
        <h2 id=""subject""><b>Subject - Export Test</b></h2> <br />

        <div id=""container"" style=""width:100%;overflow:auto;"">
            <ul>
                <li>
                    <b>Q No. 1:</b>
                    What are Binary Operators? Give examples of arithmatic binary operators.
    ");
            WriteLiteral(@"            </li>
                <li><textarea id=""a1""></textarea></li>
            </ul>
            <ul>
                <li>
                    <b>Q No. 2:</b>
                    What is type conversion? What is meant by implicit and explicit type conversion?
                </li>
                <li><textarea id=""a2""></textarea></li>
            </ul>
            <ul>
                <li><b>Q No. 3:</b> What do you mean by dynamic initialization of a variable? Give an example.</li>
                <li><textarea id=""a3""></textarea></li>
            </ul>

            <ul>
                <li><b>Q No. 4:</b> ExportTest</li>
                <li>
                    <textarea id=""txtmessage"" placeholder=""Enter Message""
                              data-val-required=""The Description field is required.""
                              data-val-maxlength-max=""5000""
                              data-val=""true"" rows=""10"" name=""txtmessage""></textarea>
                </li>
            </ul");
            WriteLiteral(">\r\n        </div>\r\n\r\n        <div style=\"text-align:center;\">\r\n            <input type=\"button\"");
            BeginWriteAttribute("style", " style=\"", 5215, "\"", 5223, 0);
            EndWriteAttribute();
            WriteLiteral(@" value=""Print to PDF"" id=""btPrint"" onclick=""onlineTestApp.printPage();"" />
        </div>
    </div>

<script>

    let onlineTestApp = new function () {

         //Show container to capture picture.

        this.takeSnapshot = function (oButton) {
            document.getElementById('picturebox').style.display = 'block';
        }

        this.printPage = function () {

            //Add some style to the print.
            // ref: https://www.encodedna.com/javascript/print-html-table-with-image-using-javascript.htm
            let style = ""<style>"";
            style = style + "".answers {font:18px Calibri; padding:10px 0;}"";
            style = style + ""</style>"";

            // Add date and time (to avoid any any ambiguity concerning submission of paper).
            let oDt = new Date();

            // Get full date.
            let sDate = oDt.getDate() + '/' + (oDt.getMonth() + 1) + '/' + oDt.getFullYear();

            // Get full time.
            let hrs = oDt.getHou");
            WriteLiteral(@"rs();
            let min = oDt.getMinutes();
            let sec = oDt.getSeconds();

            let sTime = hrs + ':' + min + ':' + sec;

            let header = '<h2>Export Test</h2>' +
                '</ul>';

            let theBody = '';

            // get all textarea (anwsers).
            let ele_tArea = document.getElementsByTagName('textarea');

            for (let i = 0; i <= ele_tArea.length - 1; i++) {
                if (theBody === '') {
                    if (ele_tArea[i].value != '') {
                        theBody = '<p class=""answers""> <b>Answer ' + (i + 1) + '</b> - ' + ele_tArea[i].value + '</p>';
                    }
                }
                else {
                    if (ele_tArea[i].value != '') {
                        theBody = theBody + '<p class=""answers""> <b>Answer ' + (i + 1) + '</b> - ' + ele_tArea[i].value + '</p>';
                    }
                }
            }

            theBody = header + theBody;

            // Crea");
            WriteLiteral(@"te window object and print the data.
            let newWin = window.open('', '', 'height=700,width=700');

            newWin.document.write(style);
            newWin.document.write(theBody);
            newWin.print();
            newWin.close();
        }
    }
</script>
");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
